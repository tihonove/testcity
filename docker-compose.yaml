services:
  clickhouse:
    image: "clickhouse/clickhouse-server:24.8-alpine"
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: testanalytics-user
      CLICKHOUSE_PASSWORD: 123123
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - testcity-network

  kafka:
    image: bitnami/kafka:4.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_CFG_LISTENERS=EXTERNAL://:9092,CONTROLLER://:9093,PLAINTEXT://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=EXTERNAL://localhost:9092,PLAINTEXT://kafka:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_KRAFT_CLUSTER_ID=2451c12e-a37d-4349-b744-a1047b01cbd3
      - ALLOW_PLAINTEXT_LISTENER=yes
    restart: unless-stopped
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - testcity-network

  db-actualizer:
    build:
      context: .
      dockerfile: Dockerfile.ActualizeDb
    container_name: test-city-db-actualizer
    depends_on:
      - clickhouse
      - kafka
    environment:
      - GITLAB_URL=https://gitlab.com/
      - GITLAB_TOKEN=${GITLAB_TOKEN:-}
      - TESTANALYTICS_CLICKHOUSE_HOST=clickhouse
      - TESTANALYTICS_CLICKHOUSE_PORT=8123
      - TESTANALYTICS_CLICKHOUSE_DB=default
      - TESTANALYTICS_CLICKHOUSE_USER=testanalytics-user
      - TESTANALYTICS_CLICKHOUSE_PASSWORD=123123
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9094
    restart: "no"
    profiles: ["services"]
    networks:
      - testcity-network

  # Сервисы проекта TestCity
  front:
    build:
      context: .
      dockerfile: Dockerfile.Front
    container_name: test-city-front
    ports:
      - "8079:80"
    environment:
      - GITLAB_URL=https://gitlab.com/
    profiles: ["services"]
    networks:
      - testcity-network

  api:
    build:
      context: .
      dockerfile: Dockerfile.TestCity.Api
    container_name: test-city-api
    ports:
      - "8124:8124"
    environment:
      - GITLAB_URL=https://gitlab.com/
      - GITLAB_TOKEN=${GITLAB_TOKEN:-}
      - TESTANALYTICS_CLICKHOUSE_HOST=clickhouse
      - TESTANALYTICS_CLICKHOUSE_PORT=8123
      - TESTANALYTICS_CLICKHOUSE_DB=default
      - TESTANALYTICS_CLICKHOUSE_USER=testanalytics-user
      - TESTANALYTICS_CLICKHOUSE_PASSWORD=123123
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9094
    depends_on:
      - clickhouse
      - kafka
      - db-actualizer
    profiles: ["services"]
    networks:
      - testcity-network

  crawler:
    build:
      context: .
      dockerfile: Dockerfile.TestCity.GitLabJobsCrawler
    container_name: test-city-crawler
    ports:
      - "8125:8125"
    environment:
      - GITLAB_URL=https://gitlab.com/
      - GITLAB_TOKEN=${GITLAB_TOKEN:-}
      - TESTANALYTICS_CLICKHOUSE_HOST=clickhouse
      - TESTANALYTICS_CLICKHOUSE_PORT=8123
      - TESTANALYTICS_CLICKHOUSE_DB=default
      - TESTANALYTICS_CLICKHOUSE_USER=testanalytics-user
      - TESTANALYTICS_CLICKHOUSE_PASSWORD=123123
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9094
    depends_on:
      - clickhouse
      - kafka
      - db-actualizer
    profiles: ["services"]
    networks:
      - testcity-network

  worker:
    build:
      context: .
      dockerfile: Dockerfile.Worker
    container_name: test-city-worker
    environment:
      - GITLAB_URL=https://gitlab.com/
      - GITLAB_TOKEN=${GITLAB_TOKEN:-}
      - TESTANALYTICS_CLICKHOUSE_HOST=clickhouse
      - TESTANALYTICS_CLICKHOUSE_PORT=8123
      - TESTANALYTICS_CLICKHOUSE_DB=default
      - TESTANALYTICS_CLICKHOUSE_USER=testanalytics-user
      - TESTANALYTICS_CLICKHOUSE_PASSWORD=123123
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9094
    depends_on:
      - clickhouse
      - kafka
      - db-actualizer
    profiles: ["services"]
    networks:
      - testcity-network

  test-routes:
    build:
      context: .
      dockerfile: Dockerfile.TestRoutes
    container_name: test-city-routes
    ports:
      - "8080:80"
    depends_on:
      - front
      - api
    profiles: ["services"]
    networks:
      - testcity-network

networks:
  testcity-network:
    driver: bridge

volumes:
  clickhouse_data:
  kafka_data:
